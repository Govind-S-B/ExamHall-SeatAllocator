First generate the windows build file
`flutter build windows`

Move it to a folder where all the contents are expected to be placed (pdfgen , rust_allocator) eg:final_build
In that folder root place the python_server.py too

The script will launch appropriate components as subprocesses and we can handle them all from a single place

Python_server will consist of these flows eventually
- Launch UI exe , wait for it to be closed
- Meanwhile do API listening for generate call from UI ( use another API subprocess script or use this same one if feasible)
- When API is called , access the db generated by UI , and call rust executable as a subprocess , wait for its execution to complete
- Launch PDFgen script as subprocess too , and make the files be written on this common folder , wait for exectuion to complete
- If all complete as above , in the API response give the files produced


NOTE : Make sure all these componenets can overwrite the db files , if they cant add a cleanup thing before launching ui